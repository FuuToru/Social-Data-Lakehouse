version: "3"
services:
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9001:9001"
      - "9000:9000"
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - ./docker-volumes/minio/data:/data
    env_file:
      - .env
    networks:
      - data_network

  mysql:
    image: mariadb:10.5.16
    container_name: mysql
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    env_file:
      - .env
    networks:
      - data_network

  hive-metastore:
    container_name: hive-metastore
    hostname: hive-metastore
    image: "bitsondatadev/hive-metastore"
    entrypoint: /entrypoint.sh
    ports:
      - "9083:9083"
    volumes:
      - ./hive-metastore/metastore-site.xml:/opt/apache-hive-metastore-3.0.0-bin/conf/metastore-site.xml:ro
    environment:
      METASTORE_DB_HOSTNAME: mysql
      IS_RESUME: "true"
    networks:
      - data_network
    depends_on:
      - mysql
      - minio

  spark-master:
    build:
      context: ./spark
      dockerfile: ./Dockerfile
    container_name: spark-master
    ports:
      - "7077:7077"
      - "8081:8080"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    volumes:
      - ./spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
    networks:
      - data_network

  spark-worker:
    build:
      context: ./spark
      dockerfile: ./Dockerfile
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
    env_file:
      - .env
    depends_on:
      - spark-master
    networks:
      - data_network

  spark-thrift-server:
    build:
      context: ./spark
      dockerfile: ./Dockerfile
    container_name: spark-thrift-server
    restart: always
    depends_on:
      - spark-master
      - hive-metastore
    ports:
      - "4040:4040"
      - "10000:10000"
    command: sh -c "
      sleep 10 && ./sbin/start-thriftserver.sh --driver-java-options '-Dhive.metastore.uris=thrift://hive-metastore:9083' --master spark://spark-master:7077 --executor-memory 4G --total-executor-cores 4 --driver-memory 4G"
    volumes:
      - ./spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./spark/hive-site.xml:/opt/bitnami/spark/conf/hive-site.xml
    networks:
      - data_network

  airflow:
    hostname: airflow
    container_name: airflow
    build: ./airflow
    restart: unless-stopped
    environment:
      - AIRFLOW__CORE__FERNET_KEY=PeszOD9t6wKNdNONTGh-k4qsYbsGHQ8CSqTQZlqPCDk=
      - AIRFLOW_HOME=/opt/airflow
    networks:
      - data_network
    depends_on:
      - minio
      - spark-master
      - spark-worker
      - spark-thrift-server
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/jars:/opt/airflow/jars
    env_file:
      - .env
    ports:
      - "8000:8000"

  presto:
    build: ./presto
    ports:
      - "8888:8888"
    volumes:
      - ./presto/coordinator_config.properties:/opt/presto/etc/config.properties
      - ./presto/etc/catalog:/opt/presto/etc/catalog
    networks:
      - data_network

  presto-worker:
    build: ./presto
    volumes:
      - ./presto/worker_config.properties:/opt/presto/etc/config.properties
      - ./presto/etc/catalog:/opt/presto/etc/catalog
    networks:
      - data_network

  superset:
    build: ./superset
    container_name: superset
    env_file:
      - .env
    ports:
      - "8088:8088"
    volumes:
      - ./superset:/superset
    restart: unless-stopped
    networks:
      - data_network

networks:
  data_network:
    driver: bridge
    name: data_network
